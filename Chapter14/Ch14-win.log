
----- Results for example Ch14_01 -----

----- Ch14_01_ex1() -----

vec1:
   278   107  -263   360   325   393   466  -321   473   259   -47   252
   109   107   276   294   142  -112   222  -160  -465   162  -202   406
  -442   220   357   -28  -127    -3   180   -54  -244    31  -153   494
  -491   115  -142  -320   450   223  -282   440  -181    38   418   -30
  -469   125  -435   190   130  -211   374  -448  -492   288   247    26

view1 is empty: false

view2 is empty: false

----- Ch14_01_ex2() -----

vec1:
   278   107  -263   360   325   393   466  -321   473   259   -47   252
   109   107   276   294   142  -112   222  -160  -465   162  -202   406
  -442   220   357   -28  -127    -3   180   -54  -244    31  -153   494
  -491   115  -142  -320   450   223  -282   440  -181    38   418   -30
  -469   125  -435   190   130  -211   374  -448  -492   288   247    26

printing elements of view1 using iterators
360 220 180 450 440 190 130 

printing elements of view1 using range for loop
360 220 180 450 440 190 130 

----- Ch14_01_ex3() -----

vec1 (initial values):
      1      2      3      4      5      6      7      8      9     10
     11     12     13     14     15     16     17     18     19     20
     21     22     23     24     25     26     27     28     29     30
     31     32     33     34     35     36     37     38     39     40
     41     42     43     44     45     46     47     48     49     50

view1 (std::views::filter):
      2      3      5      7     11     13     17     19     23     29
     31     37     41     43     47

view2 (std::views::transform):
     -2     -3     -5     -7    -11    -13    -17    -19    -23    -29
    -31    -37    -41    -43    -47

vec1 (unaltered by std::views::filter, transform):
      1      2      3      4      5      6      7      8      9     10
     11     12     13     14     15     16     17     18     19     20
     21     22     23     24     25     26     27     28     29     30
     31     32     33     34     35     36     37     38     39     40
     41     42     43     44     45     46     47     48     49     50

vec2 (result of view2 | std::ranges::to<std::vector>):
     -2     -3     -5     -7    -11    -13    -17    -19    -23    -29
    -31    -37    -41    -43    -47

----- Results for example Ch14_02 -----

----- Ch14_02_ex1() -----

vec1 (initial values):
  1196    10   872  1399    34   504  1194  1983  1790   667  1070    57
    12   685  1805  1347  1510  1684   345  1001  1461  1106   747  1814
   365  1902   891   221   574  1091   822   685   887   955   355   900
   520    91   460   722   809   423  1020  1821   829  1234   597   859

view2:
  1196    10   872    34   504  1194  1790  1070    12  1510  1684  1106
  1814  1902   574   822   900   520   460   722  1020  1234

vec3:
  1194  1790  1070    12  1510  1684  1106  1814  1902   574   822   900
   520   460   722  1020  1234

view4 (final result):
  1234  1020   722   460   520   900   822   574  1902  1814  1106  1684
  1510    12  1070  1790  1194

vec1 (after views::reverse):
  1196    10   872  1399    34   504  1194  1983  1790   667  1070    57
    12   685  1805  1347  1510  1684   345  1001  1461  1106   747  1814
   365  1902   891   221   574  1091   822   685   887   955   355   900
   520    91   460   722   809   423  1020  1821   829  1234   597   859

----- Ch14_02_ex2() -----

vec1 (initial values):
  1196    10   872  1399    34   504  1194  1983  1790   667  1070    57
    12   685  1805  1347  1510  1684   345  1001  1461  1106   747  1814
   365  1902   891   221   574  1091   822   685   887   955   355   900
   520    91   460   722   809   423  1020  1821   829  1234   597   859

view2 (final result):
  1234  1020   722   460   520   900   822   574  1902  1814  1106  1684
  1510    12  1070  1790  1194

----- Ch14_02_ex3() -----

vec1 (initial values):
  1196    10   872  1399    34   504  1194  1983  1790   667  1070    57
    12   685  1805  1347  1510  1684   345  1001  1461  1106   747  1814
   365  1902   891   221   574  1091   822   685   887   955   355   900
   520    91   460   722   809   423  1020  1821   829  1234   597   859

view2 (final result):
  1234  1020   722   460   520   900   822   574  1902  1814  1106  1684
  1510    12  1070  1790  1194

----- Ch14_02_ex4() -----

vec1 (initial values):
  1196    10   872  1399    34   504  1194  1983  1790   667  1070    57
    12   685  1805  1347  1510  1684   345  1001  1461  1106   747  1814
   365  1902   891   221   574  1091   822   685   887   955   355   900
   520    91   460   722   809   423  1020  1821   829  1234   597   859

temp2: (final result)
  1234  1020   722   460   520   900   822   574  1902  1814  1106  1684
  1510    12  1070  1790  1194

----- Results for example Ch14_03 -----

----- Ch14_03_ex1() -----

vector fruits (descending order by Name)
Tomato (red)          kJ:  74  kcal:  18
Tangerine             kJ: 223  kcal:  53
Stawberry             kJ: 136  kcal:  33
Orange                kJ: 197  kcal:  47
Kiwi (green)          kJ: 255  kcal:  61
Cherry (sweet)        kJ: 263  kcal:  63
Cherry (sour)         kJ: 209  kcal:  50
Blueberry             kJ: 240  kcal:  57
Banana                kJ: 371  kcal:  89
Apple                 kJ: 281  kcal:  67

vector fruits (ascending order by Energy)
Tomato (red)          kJ:  74  kcal:  18
Stawberry             kJ: 136  kcal:  33
Orange                kJ: 197  kcal:  47
Cherry (sour)         kJ: 209  kcal:  50
Tangerine             kJ: 223  kcal:  53
Blueberry             kJ: 240  kcal:  57
Kiwi (green)          kJ: 255  kcal:  61
Cherry (sweet)        kJ: 263  kcal:  63
Apple                 kJ: 281  kcal:  67
Banana                kJ: 371  kcal:  89

----- Ch14_03_ex2() -----

minerals (sorted using Mineral::operator<):
[Talc            1.000] [Dimorphite      1.500] [Todorokite      1.500] 
[Gypsum          2.000] [Kinoite         2.500] [Galena          2.625] 
[Chalcocite      2.750] [Calcite         3.000] [Hanksite        3.250] 
[Roselite        3.500] [Aragonite       3.750] [Fluorite        4.000] 
[Zincite         4.250] [Conichalcite    4.500] [Lindgrenite     4.500] 
[Apatite         5.000] [Perovskite      5.250] [Agrellite       5.500] 
[Anatase         5.750] [Orthoclase      6.000] [Chloritoid      6.500] 
[Bowieite        7.000] [Quartz          7.000] [Zircon          7.500] 
[Topaz           8.000] [Chrysoberyl     8.500] [Tongbaite       8.500] 
[Corundum        9.000] [Moissanite      9.250] [Diamond        10.000] 

minerals (sorted using std::ranges::greater and Hardness):
[Diamond        10.000] [Moissanite      9.250] [Corundum        9.000] 
[Chrysoberyl     8.500] [Tongbaite       8.500] [Topaz           8.000] 
[Zircon          7.500] [Bowieite        7.000] [Quartz          7.000] 
[Chloritoid      6.500] [Orthoclase      6.000] [Anatase         5.750] 
[Agrellite       5.500] [Perovskite      5.250] [Apatite         5.000] 
[Conichalcite    4.500] [Lindgrenite     4.500] [Zincite         4.250] 
[Fluorite        4.000] [Aragonite       3.750] [Roselite        3.500] 
[Hanksite        3.250] [Calcite         3.000] [Chalcocite      2.750] 
[Galena          2.625] [Kinoite         2.500] [Gypsum          2.000] 
[Dimorphite      1.500] [Todorokite      1.500] [Talc            1.000] 

minerals (sorted using std::ranges::less and Name):
[Agrellite       5.500] [Anatase         5.750] [Apatite         5.000] 
[Aragonite       3.750] [Bowieite        7.000] [Calcite         3.000] 
[Chalcocite      2.750] [Chloritoid      6.500] [Chrysoberyl     8.500] 
[Conichalcite    4.500] [Corundum        9.000] [Diamond        10.000] 
[Dimorphite      1.500] [Fluorite        4.000] [Galena          2.625] 
[Gypsum          2.000] [Hanksite        3.250] [Kinoite         2.500] 
[Lindgrenite     4.500] [Moissanite      9.250] [Orthoclase      6.000] 
[Perovskite      5.250] [Quartz          7.000] [Roselite        3.500] 
[Talc            1.000] [Todorokite      1.500] [Tongbaite       8.500] 
[Topaz           8.000] [Zincite         4.250] [Zircon          7.500] 

----- Ch14_03_ex3() -----

values (sorted using std::ranges::greater and pf1):
         X          Y |       pf1        pf2
================================================
[  12.0000,    5.0000 |   13.6094,    6.0792]
[  11.0000,   10.0000 |   13.3026,   11.0414]
[   7.0000,    8.0000 |    9.0794,    8.8451]
[   6.0000,   13.0000 |    8.5649,   13.7782]
[   6.0000,    3.0000 |    7.0986,    3.7782]
[   4.0000,   14.0000 |    6.6391,   14.6021]
[   3.0000,    4.0000 |    4.3863,    4.4771]
[   2.0000,    9.0000 |    4.1972,    9.3010]

values (sorted using std::ranges::less and pf2):
         X          Y |       pf1        pf2
================================================
[   6.0000,    3.0000 |    7.0986,    3.7782]
[   3.0000,    4.0000 |    4.3863,    4.4771]
[  12.0000,    5.0000 |   13.6094,    6.0792]
[   7.0000,    8.0000 |    9.0794,    8.8451]
[   2.0000,    9.0000 |    4.1972,    9.3010]
[  11.0000,   10.0000 |   13.3026,   11.0414]
[   6.0000,   13.0000 |    8.5649,   13.7782]
[   4.0000,   14.0000 |    6.6391,   14.6021]

----- Results for example Ch14_04 -----

----- Ch14_04_ex1() -----

vec1 (initial values):
      1      2      3      4      5      6      7      8      9     10
     11     12     13     14     15     16     17     18     19     20
     21     22     23     24     25     26     27     28     29     30
     31     32     33     34     35     36     37     38     39     40
     41     42     43     44     45     46     47     48     49     50

view1 (after filter and drop_while):
     29     31     37     41     43     47

----- Ch14_04_ex2() -----

view0 (result of std::views::iota):
      1      2      3      4      5      6      7      8      9     10
     11     12     13     14     15     16     17     18     19     20
     21     22     23     24     25     26     27     28     29     30
     31     32     33     34     35     36     37     38     39     40
     41     42     43     44     45     46     47     48     49     50

view1 (after filter and drop_while):
     29     31     37     41     43     47

----- Ch14_04_ex3() -----

colors_g1:
[ 240  255  240] [ 119.9944    0.0204    0.9608] Honeydew
[ 143  188  143] [ 119.9981    0.0949    0.6196] DarkSeaGreen
[ 144  238  144] [ 119.9991    0.1787    0.6876] LightGreen
[ 152  251  152] [ 119.9991    0.1784    0.7255] PaleGreen
[   0  100    0] [ 119.9992    1.0000    0.1307] DarkGreen
[  34  139   34] [ 119.9992    0.5073    0.2706] ForestGreen
[   0  128    0] [ 119.9993    1.0000    0.1673] Green
[  50  205   50] [ 119.9995    0.5082    0.3987] LimeGreen
[   0  255    0] [ 119.9997    1.0000    0.3333] Lime
[  46  139   87] [ 146.0907    0.4927    0.3556] SeaGreen
[  60  179  113] [ 146.3889    0.4886    0.4601] MediumSeaGreen
[   0  255  127] [ 149.8691    1.0000    0.4993] SpringGreen
[ 245  255  250] [ 149.9708    0.0200    0.9804] MintCream
[   0  250  154] [ 157.6275    1.0000    0.5281] MediumSpringGreen

colors_g2 (largest green hues):
[   0  250  154] [ 157.6275    1.0000    0.5281] MediumSpringGreen
[ 245  255  250] [ 149.9708    0.0200    0.9804] MintCream
[   0  255  127] [ 149.8691    1.0000    0.4993] SpringGreen
[  60  179  113] [ 146.3889    0.4886    0.4601] MediumSeaGreen

colors_g3 (hue < 140.00):
[ 240  255  240] [ 119.9944    0.0204    0.9608] Honeydew
[ 143  188  143] [ 119.9981    0.0949    0.6196] DarkSeaGreen
[ 144  238  144] [ 119.9991    0.1787    0.6876] LightGreen
[ 152  251  152] [ 119.9991    0.1784    0.7255] PaleGreen
[   0  100    0] [ 119.9992    1.0000    0.1307] DarkGreen
[  34  139   34] [ 119.9992    0.5073    0.2706] ForestGreen
[   0  128    0] [ 119.9993    1.0000    0.1673] Green
[  50  205   50] [ 119.9995    0.5082    0.3987] LimeGreen
[   0  255    0] [ 119.9997    1.0000    0.3333] Lime

----- Results for example Ch14_05 -----

----- Ch14_05_ex1() -----

vec1:
    -126     104     -45    -160     133      85    -121    -133     167     106
     116    -121      89     -83     199     -51     138     -83    -107     166
     -71       6      87    -180    -159    -145      40     176    -146     116

vec2:
      57     -78      15      43       5    -131      44       7      -3     -76
    -115    -166    -103     147      29      -9     109     133     -76     183
     -38      36      39      -3    -104     149     163     -71    -137     107

view1a:
   10816   17689    7225   27889   11236   13456    7921   39601   19044   27556
      36    7569    1600   30976   13456

view2a:
    3249     225    1849      25    1936      49   21609     841   11881   17689
   33489    1296    1521   22201   26569   11449

----- Ch14_05_ex2() -----

vec1 (before calculation of squares):
    -126     104     -45    -160     133      85    -121    -133     167     106
     116    -121      89     -83     199     -51     138     -83    -107     166
     -71       6      87    -180    -159    -145      40     176    -146     116

vec1 (after calculation of squares):
    -126   10816     -45    -160   17689    7225    -121    -133   27889   11236
   13456    -121    7921     -83   39601     -51   19044     -83    -107   27556
     -71      36    7569    -180    -159    -145    1600   30976    -146   13456

----- Ch14_05_ex3() -----
view1:
     168      57     102     124     115     156     102      16      77      18
     148      86     135     102      35     170      89

test_view: 
     168      57     102     124     115     156     102      16      77      18
     148      86     135     102      35     170      89
