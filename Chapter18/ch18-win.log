
----- Results for example Ch18_01 -----

----- Ch18_01_ex1() -----

Fibonacci numbers using golden ratio
   0      0.0000        1      1.0000 
   2      1.0000        3      2.0000 
   4      3.0000        5      5.0000 
   6      8.0000        7     13.0000 
   8     21.0000        9     34.0000 
  10     55.0000       11     89.0000 
  12    144.0000       13    233.0000 
  14    377.0000       15    610.0000 
  16    987.0000       17   1597.0000 
  18   2584.0000       19   4181.0000 

----- Ch18_01_ex2() -----

areas_f:
    3.141593    12.566371    28.274334    50.265484    78.539818 
  113.097336   153.938049   201.061935   254.469009   314.159271 

areas_d:
    3.141593    12.566371    28.274334    50.265482    78.539816 
  113.097336   153.938040   201.061930   254.469005   314.159265 

----- Ch18_01_ex3() -----

log3 values of [1, 81]: 
  0.0000  0.6309  1.0000  1.2619  1.4650  1.6309  1.7712  1.8928  2.0000  2.0959
  2.1827  2.2619  2.3347  2.4022  2.4650  2.5237  2.5789  2.6309  2.6801  2.7268
  2.7712  2.8136  2.8540  2.8928  2.9299  2.9656  3.0000  3.0331  3.0650  3.0959
  3.1257  3.1546  3.1827  3.2098  3.2362  3.2619  3.2868  3.3111  3.3347  3.3578
  3.3802  3.4022  3.4236  3.4445  3.4650  3.4850  3.5046  3.5237  3.5425  3.5609
  3.5789  3.5966  3.6139  3.6309  3.6476  3.6640  3.6801  3.6960  3.7115  3.7268
  3.7419  3.7567  3.7712  3.7856  3.7997  3.8136  3.8273  3.8408  3.8540  3.8671
  3.8801  3.8928  3.9053  3.9177  3.9299  3.9420  3.9539  3.9656  3.9772  3.9887
  4.0000

log5 values of [1, 125]: 
  0.0000  0.4307  0.6826  0.8614  1.0000  1.1133  1.2091  1.2920  1.3652  1.4307
  1.4899  1.5440  1.5937  1.6397  1.6826  1.7227  1.7604  1.7959  1.8295  1.8614
  1.8917  1.9206  1.9482  1.9746  2.0000  2.0244  2.0478  2.0704  2.0922  2.1133
  2.1337  2.1534  2.1725  2.1911  2.2091  2.2266  2.2436  2.2602  2.2763  2.2920
  2.3074  2.3223  2.3370  2.3512  2.3652  2.3789  2.3922  2.4053  2.4181  2.4307
  2.4430  2.4550  2.4669  2.4785  2.4899  2.5011  2.5121  2.5229  2.5335  2.5440
  2.5542  2.5643  2.5743  2.5841  2.5937  2.6032  2.6125  2.6217  2.6308  2.6397
  2.6486  2.6572  2.6658  2.6743  2.6826  2.6908  2.6990  2.7070  2.7149  2.7227
  2.7304  2.7380  2.7456  2.7530  2.7604  2.7676  2.7748  2.7819  2.7889  2.7959
  2.8028  2.8095  2.8163  2.8229  2.8295  2.8360  2.8424  2.8488  2.8551  2.8614
  2.8675  2.8737  2.8797  2.8857  2.8917  2.8976  2.9034  2.9092  2.9149  2.9206
  2.9262  2.9318  2.9373  2.9428  2.9482  2.9536  2.9589  2.9642  2.9694  2.9746
  2.9798  2.9849  2.9900  2.9950  3.0000

----- Results for example Ch18_02 -----

----- Ch18_02_ex1() -----

z0: (0.000, 0.000)
z1: (3.000, 4.000)
z2: (7.000, -3.000)

z3: (10.000, 1.000)
z4: (-4.000, 7.000)
z5: (33.000, 19.000)
z6: (0.155, 0.638)

z1: (4.000, 6.000)
z2: (5.000, -3.000)
z3: (-4.000, 40.000)
z7: (5.500, 9.000)

z8: (4.000, 6.000)
z9: (5.000, 12.000)
z8 == z9: false
z8 != z9: true
z9 == (4.0 + 6.0i): false
z9 != (4.0 + 6.0i): true

----- Ch18_02_ex2() -----

z1:      (3.000, 4.000)
z1_abs:  5.0000
z1_arg:  0.9273 radians
z1_arg:  53.1301 degrees)
z1_conj: (3.0000, -4.0000)

----- Ch18_02_ex3() -----

original signal x:
(   1.000000,    0.000000)
(   3.000000,   -1.000000)
(   0.000000,    5.000000)
(  -1.000000,    2.000000)
(  -8.000000,   -3.000000)
(   7.000000,   -4.000000)
(   5.000000,   11.000000)
(  -6.000000,   -2.000000)

DFT signal X:
(   1.000000,    8.000000)
(   1.585786,    6.585786)
( -17.000000,  -36.000000)
(  26.313708,   -2.000000)
(  -5.000000,   18.000000)
(   4.414214,    9.414214)
(  -7.000000,   -2.000000)
(   3.686292,   -2.000000)

inverse DFT signal X_inv:
(   1.000000,    0.000000)
(   3.000000,   -1.000000)
(   0.000000,    5.000000)
(  -1.000000,    2.000000)
(  -8.000000,   -3.000000)
(   7.000000,   -4.000000)
(   5.000000,   11.000000)
(  -6.000000,   -2.000000)

----- Results for example Ch18_03 -----

----- Ch18_03_ex1() -----

random values using generator std::minstd_rand
   1   52   90    9   46   91    1   99   96   86   77    8   18   70   65 
  84   35   31   37   98   92    2   12   79   65   11   39   87   61   35 
  48   68   13   29   41   82   67   35   64   63   75    4   52   27   51 
  68   83   63   73    6   44   51   71   20   71   61   70    1   79   30 

random values using generator std::mt19937
  38.08   79.86   95.12   19.16   73.47   78.19   60.27   60.09   16.45   45.14 
  16.44   10.90    6.75   46.47   86.75   34.04   60.51   15.14   71.10   65.44 
   3.04    6.58   97.02   72.48   83.41   93.92   22.02    1.08   19.00   99.23 
  19.16   62.13   31.12   61.55   52.95    1.70   43.76    3.28   29.83   52.95 
  61.57   40.59   14.81    5.62   29.92   97.40   37.27   24.04   46.15    9.97 
  78.73   62.22   20.77   38.86   51.91   98.34   59.65   47.21    5.60   86.13 

----- Ch18_03_ex2() -----

iteration #0
  6.0309   3.8995   7.7369   5.9477   4.7517   3.1663   4.0144   0.9781 
  3.1416   5.7852   4.6810   5.1597   4.1444   5.0444   4.7650   3.9364 
  3.4640   5.4442   4.9307   5.2849   4.7905   7.2687   8.8255   3.9498 
  7.2388   0.9466   2.7978   6.5584   5.7462   7.2605   2.6825   4.2271 

iteration #1
  6.0309   3.8995   7.7369   5.9477   4.7517   3.1663   4.0144   0.9781 
  3.1416   5.7852   4.6810   5.1597   4.1444   5.0444   4.7650   3.9364 
  3.4640   5.4442   4.9307   5.2849   4.7905   7.2687   8.8255   3.9498 
  7.2388   0.9466   2.7978   6.5584   5.7462   7.2605   2.6825   4.2271 

----- Ch18_03_ex3() -----
Saved histogram to file Ch18_03_ex3-histogram-00.csv
Saved histogram to file Ch18_03_ex3-histogram-01.csv
Saved histogram to file Ch18_03_ex3-histogram-02.csv
Saved histogram to file Ch18_03_ex3-histogram-03.csv

----- Results for example Ch18_04 -----

----- Ch18_04_ex1() -----

using class DiceSet 
(num_dice = 2, num_sides = 6)

roll  0: 5 1  ( 6)  |  roll  1: 3 5  ( 8)
roll  2: 3 5  ( 8)  |  roll  3: 3 1  ( 4)
roll  4: 2 1  ( 3)  |  roll  5: 6 5  (11)
roll  6: 1 2  ( 3)  |  roll  7: 1 1  ( 2)
roll  8: 5 1  ( 6)  |  roll  9: 4 3  ( 7)
roll 10: 2 2  ( 4)  |  roll 11: 3 5  ( 8)
roll 12: 2 5  ( 7)  |  roll 13: 2 6  ( 8)
roll 14: 6 3  ( 9)  |  roll 15: 5 6  (11)
roll 16: 5 2  ( 7)  |  roll 17: 6 2  ( 8)
roll 18: 6 3  ( 9)  |  roll 19: 2 1  ( 3)
roll 20: 1 5  ( 6)  |  roll 21: 4 4  ( 8)
roll 22: 4 3  ( 7)  |  roll 23: 5 4  ( 9)
roll 24: 3 1  ( 4)  |  roll 25: 5 1  ( 6)
roll 26: 6 4  (10)  |  roll 27: 3 4  ( 7)
roll 28: 1 2  ( 3)  |  roll 29: 5 1  ( 6)

----- Ch18_04_ex2() -----

using class DiceSet 
(num_dice = 15, num_sides = 20)

roll  0:  Met  Ala  Gln  Gln  Lys  Val  Gln  Tyr  Asp  Ile  Thr  Phe  Leu  Ser  Trp  
roll  1:  Ala  Met  Ser  Asn  Cys  Met  Ala  Asp  Trp  His  Gln  Thr  Gly  Ile  Trp  
roll  2:  His  Phe  Lys  Asp  His  Ser  Leu  Val  Leu  Tyr  Arg  Trp  Trp  Val  Gly  
roll  3:  Gln  Lys  Lys  Tyr  Glu  Phe  Gly  Leu  Thr  Arg  Gly  Cys  Tyr  Gln  Ser  
roll  4:  Cys  Ala  Thr  Leu  Trp  Asn  Val  Arg  Met  Ala  Pro  Gly  Pro  His  Pro  
roll  5:  Ile  Glu  Phe  His  Leu  Tyr  Met  Glu  Glu  Val  Gln  Trp  Lys  Tyr  Pro  
roll  6:  Cys  Phe  Ala  Ala  Ser  Lys  Trp  Glu  Ser  Val  Arg  Gln  Gly  Gly  Ser  
roll  7:  Asn  Asn  Cys  Ala  His  His  Cys  Tyr  Phe  Trp  Pro  Met  Ile  Cys  Arg  
roll  8:  Pro  Tyr  Tyr  Gln  Glu  Lys  Asp  Leu  Cys  Trp  Arg  His  Asp  Phe  Glu  
roll  9:  Val  Asp  Leu  Trp  Arg  Gln  Gly  Gly  Cys  Phe  Arg  Cys  Arg  Ile  Asn  
roll 10:  Trp  Gly  Gly  Asn  Phe  Tyr  Met  His  Ser  Arg  Glu  Tyr  Tyr  Phe  His  
roll 11:  Phe  Glu  Lys  Lys  Gln  Asp  Asn  Ser  Val  His  Gly  Gln  Ala  Tyr  Ala  
roll 12:  Val  Gln  Lys  Arg  Arg  Gln  Leu  Asp  Met  Val  Tyr  Glu  Trp  Tyr  Phe  
roll 13:  Ala  Pro  Gly  Gln  Ile  Ser  Glu  His  Phe  Glu  Ile  Pro  Ala  Lys  Trp  
roll 14:  Asn  Cys  Asp  Tyr  Trp  Met  Trp  Val  Val  Thr  Trp  Glu  Trp  Tyr  Met  
roll 15:  Met  Arg  His  Arg  Asn  Gly  Gly  His  Gln  Leu  Gly  Leu  Leu  Lys  Ala  
roll 16:  Arg  Trp  His  Trp  Ser  Ser  Asn  Asn  Gly  Asn  Leu  His  Glu  Glu  Asp  
roll 17:  Arg  Cys  Tyr  Trp  His  Trp  Arg  Phe  Phe  Leu  Met  Ser  Phe  Gly  Val  
roll 18:  Gln  Asn  His  His  Pro  Leu  Lys  Asn  Asn  Pro  Leu  Ile  Thr  Leu  Asn  
roll 19:  His  Glu  Ser  Ile  Gln  Trp  Gln  Met  Cys  Gly  Ala  Met  Arg  Glu  Trp  

----- Results for example Ch18_05 -----

----- Ch18_05_ex1() -----

vec1:
  337.0  362.0  245.0  416.0  413.0  368.0   16.0  351.0  405.0   97.0
  283.0  489.0  149.0  289.0   24.0  257.0  496.0  426.0    4.0  191.0
  385.0  137.0  374.0  321.0  189.0  247.0  248.0  169.0  465.0  309.0
  198.0  181.0  487.0  166.0  263.0  314.0   47.0  347.0  407.0  164.0
  106.0  205.0  278.0  368.0  147.0  355.0  409.0  142.0  415.0  462.0

vec2:
  337.0  362.0  245.0  416.0  413.0  368.0   16.0  351.0  405.0   97.0
  283.0  489.0  149.0  289.0   24.0  257.0  496.0  426.0    4.0  191.0
  385.0  137.0  374.0  321.0  189.0  247.0  248.0  169.0  465.0  309.0
  198.0  181.0  487.0  166.0  263.0  314.0   47.0  347.0  407.0  164.0
  106.0  205.0  278.0  368.0  147.0  355.0  409.0  142.0  415.0  462.0

vec1 == vec2: true (expect true)

vec3:
    164    102    440    360    455     20    308    389    186     89
    360    332    293    362    188    371    221    137    500    467
    304     37    139    183    128    101    489     26    397     81
    249    372    218    340    161     37    145    273    454    132
    328    164    120    307    242    289    213    304    420     95

vec4:
     37    297    461    499    417    289     80    109    227    203
     34    286    468    343    125    490    302    446    426    114
    427    380    133    390     73    354     72    199    152    494
      6     51    486    241    345    180    243    335    315    215
    115    447    328     20      6    238    190    325     56    263

vec3 == vec3: false (expect false)
